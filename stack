#!/usr/bin/env python

#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

import os
import os.path
import sys

# This needs to happen immediately
from devstack import log as logging
logging.setup()

#this handles our option parsing
from devstack import opts
from devstack import constants

#these are the program runtimes that actually do the running
from devstack.progs import actions
from devstack.progs import deps

LOG = logging.getLogger("devstack")


def check_python(prog):
    py_version = sys.version_info
    major = py_version[0]
    minor = py_version[1]
    if(major < 2 or (major == 2 and minor < 6)):
        LOG.error("Your python version is to old, please upgrade to >= 2.6!")
        return False
    if(major >= 3):
        LOG.warn("%s has not been tested in python %s, use at your own risk!" % (prog, major))
    return True


def main():
    me = os.path.basename(sys.argv[0])

    if(not check_python(me)):
        return 1

    #parse and get it done!
    args = opts.parse()

    #figure out what to do
    only_list_deps = args.pop('list_deps', False)

    #now do it
    rc_ok = False
    if(only_list_deps):
        rc_ok = deps.run(args)
    else:
        rc_ok = actions.run(args)
    if(rc_ok):
        return 0
    else:
        LOG.info("Perhaps you should try %s --help" % (me))
        return 1


if __name__ == "__main__":
    sys.exit(main())
