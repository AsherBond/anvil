#!/usr/bin/python

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Library General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# Parts Copyright 2007 Red Hat, Inc

import warnings
warnings.filterwarnings("ignore")

import os
import pkg_resources
import sys

from yum import YumBase


def find_matches(base, pkg_name, py_req):
    pkgs = base.doPackageLists(patterns=[pkg_name], ignore_case=True,
                               showdups=True)
    all_pkgs = list(pkgs.available)
    all_pkgs.extend(pkgs.installed)

    yum_map = {}
    for pkg in all_pkgs:
        for provides in pkg.provides:
            pkg_info = (pkg.version, pkg)
            yum_map.setdefault(provides[0], set()).add(pkg_info)

    matches = []
    yum_versions = yum_map.get(pkg_name, [])
    for (version, pkg) in yum_versions:
        if version in py_req:
            matches.append(pkg)
    return matches


if __name__ == '__main__':
    arg_c = len(sys.argv) - 1
    if arg_c < 2 or (arg_c % 2) != 0:
        print("Usage: %s package-name python-name [package-name python-name] ..." % (os.path.basename(sys.argv[0])))
        sys.exit(1)
    arg_v = sys.argv[1:]
    base = YumBase()
    base.doConfigSetup(debuglevel=-1, errorlevel=-1)
    for (pkg_name, py_name) in zip(arg_v[0::2], arg_v[1::2]):
        matches = find_matches(base, pkg_name,
                               pkg_resources.Requirement.parse(py_name))
        if matches:
            # Pick the newest match.
            print(sorted(matches)[-1])
        else:
            # Nothing found.
            print("")
